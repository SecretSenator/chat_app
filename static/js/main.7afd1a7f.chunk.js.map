{"version":3,"sources":["components/MessageForm.jsx","components/MyMessage.jsx","components/TheirMessage.jsx","components/ChatFeed.jsx","components/LoginForm.jsx","App.js","index.js"],"names":["MessageForm","props","useState","value","setValue","chatID","creds","handleSubmit","event","preventDefault","text","trim","length","sendMessage","className","onSubmit","placeholder","onChange","target","isTyping","htmlFor","PictureOutlined","type","multiple","id","style","display","files","bind","SendOutlined","MyMessage","message","attachments","src","file","alt","float","marginRight","color","backgroundColor","TheirMessage","lastMessage","isFirstMessageByUser","sender","username","backgroundImage","avatar","marginLeft","ChatFeed","chats","activeChat","userName","messages","chat","renderReadReceipts","isMyMessage","people","map","person","index","last_read","title","keys","Object","key","lastMessageKey","width","renderMessage","height","LoginForm","setUsername","password","setPassword","error","setError","e","a","authObject","axios","get","headers","localStorage","setItem","window","location","reload","required","align","onClick","App","getItem","projectID","userSecret","renderChatFeed","chatAppProps","onNewMessage","Audio","play","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.7afd1a7f.chunk.js","sourcesContent":["import {useState} from 'react';\r\nimport {sendMessage, isTyping} from 'react-chat-engine'\r\nimport {SendOutlined, PictureOutlined} from '@ant-design/icons'\r\n\r\nconst MessageForm=(props)=>{\r\n    const [value, setValue] = useState('');\r\n    const {chatID, creds}=props;\r\n\r\n    const handleSubmit=(event)=>\r\n    {\r\n        event.preventDefault();\r\n\r\n        const text=value.trim();\r\n        if(text.length>0)\r\n            sendMessage(creds, chatID,{text});\r\n        setValue('');\r\n    }\r\n    const handleChange=(event)=>\r\n    {\r\n        setValue(event.target.value);\r\n\r\n        isTyping(props,chatID);\r\n        \r\n    }\r\n\r\n    const handleUpload=(event)=>{\r\n        sendMessage(creds,chatID,{files: event.target.files,\r\n                                    text: ''})\r\n    }\r\n\r\n    return (\r\n        <form className='message-form' onSubmit={handleSubmit}>\r\n            <input className='message-input' \r\n                   placeholder='send a message...'\r\n                   value={value}\r\n                   onChange={handleChange}\r\n                   onSubmit={handleSubmit}\r\n            />\r\n            <label htmlFor=\"upload-button\">\r\n                <span className='image-button'>\r\n                    <PictureOutlined className='picture-icon'>                        \r\n                    </PictureOutlined>\r\n                </span>\r\n            </label>\r\n            <input type=\"file\"\r\n                   multiple={false} \r\n                   id='upload-button'\r\n                   style={{display:'none'}}\r\n                   onChange={handleUpload.bind(this)}\r\n            />\r\n            <button type='submit' className='send-button'>\r\n                <SendOutlined className='send-icon'/>\r\n            </button>\r\n        </form>\r\n    )\r\n\r\n}\r\nexport default MessageForm;","const MyMessage = ({ message }) => {\r\n    if (message.attachments && message.attachments.length > 0) {\r\n      return (\r\n        <img\r\n          src={message.attachments[0].file}\r\n          alt=\"message-attachment\"\r\n          className=\"message-image\"\r\n          style={{ float: 'right' }}\r\n        />\r\n      );\r\n    }\r\n  \r\n    return (\r\n      <div className=\"message\" style={{ float: 'right', marginRight: '0px', color: 'white', backgroundColor: 'rgb(150,50,30)' }}>\r\n        {message.text}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default MyMessage;","const TheirMessage = ({ lastMessage, message }) => {\r\n    const isFirstMessageByUser = !lastMessage || lastMessage.sender.username !== message.sender.username;\r\n  \r\n    return (\r\n      <div className=\"message-row\">\r\n        {isFirstMessageByUser && (\r\n          <div\r\n            className=\"message-avatar\"\r\n            style={{ backgroundImage: message.sender && `url(${message.sender.avatar})` }}\r\n          />\r\n        )}\r\n        {message.attachments && message.attachments.length > 0\r\n          ? (\r\n            <img\r\n              src={message.attachments[0].file}\r\n              alt=\"message-attachment\"\r\n              className=\"message-image\"\r\n              style={{ marginLeft: isFirstMessageByUser ? 'px' : '48px' }}\r\n            />\r\n          )\r\n          : (\r\n            <div className=\"message\" style={{ float: 'left', backgroundColor: 'rgb(200,100,100)', marginLeft: isFirstMessageByUser ? '4px' : '48px' }}>\r\n              {message.text}\r\n            </div>\r\n          )}\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  export default TheirMessage;","import MessageForm from './MessageForm';\r\nimport MyMessage from './MyMessage';\r\nimport TheirMessage from './TheirMessage';\r\n\r\nconst ChatFeed=(props)=>\r\n{\r\n    const {chats, activeChat,userName,messages}=props;\r\n    const chat =chats && chats[activeChat];\r\n\r\n    const renderReadReceipts=(message, isMyMessage)=>{\r\n      return  chat.people.map((person,index)=>person.last_read===message.id   \r\n                                &&(\r\n                                    <div\r\n                                    key={`read_${index}`}\r\n                                    className='read-receipt'\r\n                                    style={{\r\n                                        float: isMyMessage?'right':'left',\r\n                                        backgroundImage:`url(${person?.person?.avatar})`\r\n                                    }}\r\n                                    />\r\n                                ))\r\n    }\r\n\r\n    const renderMessage=()=>{\r\n        const keys=Object.keys(messages)\r\n    \r\n    return (\r\n        keys.map((key,index)=>{\r\n            const message=messages[key];\r\n            const lastMessageKey = index===0?null : keys[index-1]\r\n            const isMyMessage= userName===message.sender.username\r\n            return (\r\n                <div key={`msg_${index}`} style={{width: '100%'}}>\r\n                    <div className='message-block'>\r\n                        {\r\n                            isMyMessage? <MyMessage message={message}/>:\r\n                            <TheirMessage message={message} lastMessage={messages[lastMessageKey]}/>\r\n                        }\r\n                    </div>\r\n                    <div className='read-receipts' \r\n                                    style={{marginRight:isMyMessage?'18px':'0px',\r\nmarginLeft:isMyMessage?'0px':'68px'}}>\r\n                        {renderReadReceipts(message,isMyMessage)}\r\n\r\n                    </div>\r\n                </div>\r\n            )\r\n        })\r\n    )}\r\n\r\n   \r\n\r\n    if(!chat)   return 'Loading....';\r\n\r\n    return(\r\n        <div className='chat-feed'>\r\n            <div className='chat-title-container'>\r\n                <div className='chat-title'>\r\n                 {/* //  ?. makes sure that we have chat before \r\n                    //we try to access the title variable */}\r\n                    {chat?.title}\r\n                </div>\r\n                <div className='chat-subtitle'>\r\n                    {chat.people.map((person)=>\r\n                                    `${person.person.username}`)}\r\n                </div>\r\n                { renderMessage()}\r\n                <div style={{height:'100px'}}/>\r\n                <div className='message-form-container'>\r\n                    <MessageForm {...props} chatID={activeChat}></MessageForm>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default ChatFeed;","import {useState} from 'react';\r\nimport axios from 'axios'\r\n\r\nconst projectID='baa4dad4-4585-4217-9587-6bc78128f573';\r\n\r\nconst LoginForm=()=>{\r\nconst [username,setUsername]=useState('');\r\nconst [password, setPassword]=useState('');\r\nconst [error, setError] = useState('')\r\n\r\nconst handleSubmit=async(e)=>{\r\n    e.preventDefault();\r\n    const authObject={'project-ID':projectID,\r\n                        'User-Name':username,\r\n                        'User-Secret':  password      \r\n             }\r\n    try{\r\n       await axios.get('https://api.chatengine.io/chats',\r\n        {headers: authObject})\r\n        localStorage.setItem('username',username)\r\n        localStorage.setItem('password',password)\r\n        window.location.reload();\r\n        setError('');\r\n    } catch(error){\r\n        setError('OOPS!! Incorrect Credentials!')\r\n    }\r\n}\r\n\r\nreturn (\r\n    <div className='wrapper'>\r\n        <div className='form'>\r\n            <h1 className='title'>Chat Application</h1>\r\n            <form onSubmit={handleSubmit}>\r\n                <input type=\"text\"\r\n                    value={username}\r\n                    onChange={(e)=>setUsername(e.target.value)}\r\n                    className='input'\r\n                    placeholder='username'\r\n                    required\r\n                />\r\n                 <input type=\"password\"\r\n                    value={password}\r\n                    onChange={(e)=>setPassword(e.target.value)}\r\n                    className='input'\r\n                    placeholder='password'\r\n                    required\r\n                />\r\n                <div align='center'>\r\n                    <button type='submit' className='button' onClick={handleSubmit}>\r\n                        <span>Start Chatting</span>\r\n                    </button>\r\n                </div>\r\n            </form>\r\n            <h1>{error}</h1>\r\n        </div>\r\n    </div>\r\n);\r\n}\r\n\r\nexport default LoginForm;","import './App.css';\r\nimport {ChatEngine} from 'react-chat-engine';\r\nimport ChatFeed from './components/ChatFeed.jsx';\r\nimport LoginForm from './components/LoginForm'\r\n\r\n\r\nconst App=()=>{\r\n    if(!localStorage.getItem('username'))\r\n        return <LoginForm/>\r\n    return (\r\n        <ChatEngine\r\n            height='100vh'\r\n            projectID={'baa4dad4-4585-4217-9587-6bc78128f573'}\r\n            userName={localStorage.getItem('username')}\r\n            userSecret={localStorage.getItem('password')}\r\n        renderChatFeed={(chatAppProps)=><ChatFeed {...chatAppProps}/>}\r\n        onNewMessage={() => new Audio('https://chat-engine-assets.s3.amazonaws.com/click.mp3').play()}\r\n        />\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\nimport App from './App';\r\n\r\n\r\nReactDom.render(<App/>,document.getElementById('root'));"],"sourceRoot":""}